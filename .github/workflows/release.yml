name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.3)'
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  validate:
    runs-on: ubuntu-24.04

    steps:
      - name: Validate inputs
        run: |
          if ! [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "⚠️ Error: Version format must be x.x.x (e.g., 1.2.3)."
            exit 1
          fi
          echo "✅ Version format is valid."

  archive:
    strategy:
      matrix:
        os: [ ubuntu-24.04, windows-2025, macos-15-large ]
    runs-on: ${{ matrix.os }}
    needs: [ validate ]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Install Tools
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-auditable,cargo-audit,cargo-edit

    - name: Set version
      run: cargo set-version ${{ github.event.inputs.version }}

    - name: Build
      run: |
        cargo auditable build --release
        cargo auditable build --profile release-shim --bin kopi-shim

    - name: Zip
      if: runner.os == 'Windows'
      run: |
        New-Item -Path archive/pkg -ItemType Directory -Force
        Compress-Archive -Path ./target/release/kopi.exe, ./target/release-shim/kopi-shim.exe -DestinationPath archive/pkg/kopi-${{ github.event.inputs.version }}-windows-x64.zip

    - name: Targz
      if: runner.os != 'Windows'
      run: |
        mkdir -p archive/pkg
        cp ./target/release/kopi target/
        cp ./target/release-shim/kopi-shim target/
        os_lower=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
        cd target/
        tar -zcvf ../archive/pkg/kopi-${{ github.event.inputs.version }}-${os_lower}-x64.tar.gz ./kopi ./kopi-shim

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: package-${{ runner.os }}
        path: archive/pkg
        retention-days: 1

  package-windows:
    runs-on: windows-2025

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Install Tools
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-auditable,cargo-audit,cargo-edit

    - name: Set version
      run: cargo set-version ${{ github.event.inputs.version }}

    - name: Install Wix
      run: dotnet tool install --global wix

    - name: Build bundle
      run: |
        pkg/wix/build-bundle.ps1 -Version ${{ github.event.inputs.version }}
        New-Item -Path archive/pkg -ItemType Directory -Force
        Copy-Item ./pkg/wix/output/kopi-bundle-with-vcredist-${{ github.event.inputs.version }}-x64.exe ./archive/pkg/
        Copy-Item ./pkg/wix/output/en-us/kopi-${{ github.event.inputs.version }}-x64.msi ./archive/pkg/

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: package-${{ runner.os }}-bundle
        path: archive/pkg
        retention-days: 1

  publish-cargo:
    runs-on: ubuntu-24.04
    needs: [ archive, package-windows ]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1

    - name: Install Tools
      uses: taiki-e/install-action@v2
      with:
        tool: cargo-edit

    - name: Set version
      run: cargo set-version ${{ github.event.inputs.version }}

    - name: Publish
      run: cargo publish --dry-run
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
